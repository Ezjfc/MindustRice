// https://gitlab.gnome.org/GNOME/gtk/-/blob/gtk-3-24/gtk/theme/Adwaita/_colors-public.scss

/// fit-border surrounds an element with a border of its accurate shape.
@mixin fit-border($thickness, $colour) {
  filter: drop-shadow(
    $thickness $thickness $colour
  ) drop-shadow(
    $thickness (-$thickness) $colour
  ) drop-shadow(
    -$thickness $thickness $colour
  ) drop-shadow(
    -$thickness (-$thickness) $colour
  );
}

* {
  font-family: Symbols Nerd Fonts Mono, fontello;
  border-radius: 0px;
  border: 0px;
  background: transparent;
}

.module {
  &:nth-child(2) {
    border-color: #454545;
    background: #00000088;
    border: 3px solid;
    border-bottom-left-radius: 5px; // TODO: change to corner
    border-bottom-right-radius: 5px; // TODO: change to corner
  }

  > * {
    margin-left: 3px;
    margin-right: 3px;
  }
}

.blockDisabled {
  filter: grayscale(100%) brightness(50%);
}

.blockOverlay :hover {
    background: white;
}

.hotParticle {
  background: radial-gradient(white 50%, rgba(255, 255, 255, 0.5) 50%, transparent 90%);
  animation: particle 0.3s linear infinite; // Animation is dynamically defined.

  // Dynamically set properties:
  // --initX
  // --initY
  // --initXOrigin
  // --initYOrigin
  // --finalX
  // --finalY
  // --finalXOrigin
  // --finalYOrigin

  @keyframes particle {
    0% {
      opacity: 0%;
    }
    19% {
      opacity: 0%;
    }

    20% {
      background: radial-gradient(white 50%, rgba(255, 255, 255, 0.5) 50%, transparent 90%);
      opacity: 100%;
      transform: scale(0.4) translate(var(--initX), var(--initY));
      transform-origin: var(--initXOrigin) var(--initYOrigin);

    }
    100% {
      opacity: 50%;
      transform: scale(0.1) translate(var(--finalX), var(--finalY));
      transform-origin: var(--finalXOrigin) var(--finalYOrigin);
    }
  }
}

.debugInspect {
  * :hover {
    box-shadow: 0 0 0 1px white;
  }
}

label {
  color: white;
  // https://stackoverflow.com/a/13427256
  text-shadow: 2px 0 #3F3F3F, -2px 0 #3F3F3F, 0 2px #3F3F3F, 0 -2px #3F3F3F,
               1px 1px #3F3F3F, -1px -1px #3F3F3F, 1px -1px #3F3F3F, -1px 1px #3F3F3F;
}

.Workspaces {
  label {
    font-weight: normal;
  }

  button {
    border: 3px solid white;
  }

  .focused {
    border-color: #FFD37F;
  }
}

.Focus label {
  color: #FFD37F;
}

@mixin TODOTemporaryFix {
  button {
    margin: 0px;
    padding: 0px;
  }
}

.Memory {
  // Dynamically set property:
  // Gtk.AspectFrame {
  //   filter
  // }

  .heat {
    // Dynamically set property:
    // opacity

    background: rgba(255, 0, 0, 0.2);
  }
}

.IdleInhibitor {
  @include TODOTemporaryFix;

  .radarTop {
    @include fit-border(2px, #4A4B53);
    animation: spin 3s linear forwards;
    // Lmao good luck OCD people (this is in-game mechanism tho):
    animation-play-state: paused;

    @keyframes spin {
      100% {
        transform: rotate(-360deg);
      }
    }
  }

  .spin {
    animation-play-state: running;
  }
}

.WirelessNetwork {
  @include TODOTemporaryFix;
}

.PowerProfile {
  @include TODOTemporaryFix;

  .radiate {
    .radiation {
      animation: radiate 2s linear infinite;
    }
  }

  @keyframes radiate {
    0% {
      border: 2px solid #FEB380;
      transform: rotate(45deg) scale(0);
    }
    100% {
      border: 2px solid #FEB380;
      transform: rotate(45deg) scale(1.7);
    }
  }
}

.Battery {
  .progressBar {
    --corner-radius: 6px;
    --border-width: 3.5px;
    --tail-end: calc(var(--corner-radius) + 0.5px);

    background: linear-gradient(
      // Head gradient:
      135deg, transparent 0px, transparent var(--corner-radius),
      #1D2025 var(--corner-radius),
      // Avoid blocking tail gradient:
      #1D2025 50%, transparent 50%,

    ), linear-gradient(
        // Tail gradient:
        -45deg, transparent 0px, transparent var(--corner-radius), #1D2025 var(--corner-radius),
        // Avoid blocking head gradient:
        #1D2025 50%, transparent 50%,

    );
    margin-bottom: 8px;
    margin-top: 8px;

    .fill {
      background: linear-gradient(
        // Head gradient:
        135deg, transparent 0px, transparent var(--corner-radius),
        #EC7B4C var(--corner-radius),
        // Avoid blocking tail gradient:
        #EC7B4C 50%, transparent 50%,

      ), linear-gradient(
        // Tail gradient:
        -45deg, transparent 0px, transparent var(--corner-radius),
        // Thicken the tail "drop shadow":
        #B35F3E var(--corner-radius),
        #B35F3E var(--tail-end),
        #EC7B4C var(--tail-end),
        // Avoid blocking head gradient:
        #EC7B4C 50%, transparent 50%,

      );
      filter: drop-shadow(0px var(--border-width) 0px #B35F3E);
      margin-bottom: var(--border-width);
    }

    .stripes {
      border-top: 2px solid;
      border-bottom: 2px solid;
      // border-right: 2px solid;
      border-color: #FFD37F;
      background: repeating-linear-gradient(
        90deg, transparent 0px, transparent 10px,
      #FFD37F 10px, #FFD37F 20px, transparent 20px,
      );
      transform: skew(-45deg, 0);
      margin-left: calc(var(--corner-radius) * 2);
      margin-right: 0px;
    }

    .marquee {
      // https://stackoverflow.com/questions/63787241/css-how-to-create-an-infinitely-moving-repeating-linear-gradient
      --d:100px;
      --angle:45deg;
      background-size: calc(var(--d)/sin(var(--angle))) 100%;
      animation: marquee 3s linear infinite;

      @keyframes marquee {
        0% {
          background-position: calc(var(--d)/sin(var(--angle))) 0;
        }
      }
    }
  }
}

.Clock {
  label {
    font-family: Pixellari;
    font-weight: normal;
  }
}

.FatalError {
  background: red;

  label {
    margin: 10px;
  }
}
